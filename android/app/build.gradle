//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
//
//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//apply plugin: 'com.google.gms.google-services'
//
//android {
//    namespace "com.kt.doctak"
////    compileSdkVersion flutter.compileSdkVersion
//    ndkVersion '25.2.9519653'
//    compileSdkVersion 34
//
////    ndkVersion flutter.ndkVersion
////
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//
//        applicationId "com.kt.doctak"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdkVersion 24
//        targetSdkVersion flutter.targetSdkVersion
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
//    }
//
//    buildTypes {
//        release {
//
//            minifyEnabled true
//            shrinkResources true
//            multiDexEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source '../..'
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
////    implementation 'com.google.firebase:firebase-messaging:21.1.0'
//    implementation 'com.pusher:push-notifications-android:1.9.0'
//    implementation platform('com.google.firebase:firebase-bom:33.1.2')
////    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
//    // Add the dependency for the Firebase SDK for Google Analytics
//    // When using the BoM, don't specify versions in Firebase dependencies
//    implementation 'com.google.firebase:firebase-analytics'
//    implementation 'com.google.android.gms:play-services-ads:23.2.0'
//    implementation project(path: ':google_mobile_ads')
//
//    // For Kotlin users, also import the Kotlin extensions library for Play In-App Update:
//
//}
plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'

}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    packagingOptions {
        exclude "**/libAgoraRtcWrapperSymbol.so"
        // Add other exclusions as needed
    }
    namespace = "com.kt.doctak"
    compileSdk = 35
//    ndkVersion = '27.2.12479018'
    defaultConfig {
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
                // Specify CMake version here
                version "3.22.1"
            }
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.kt.doctak"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        multiDexEnabled true
        minSdk = 24
        targetSdk = 35
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
        }

        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    // Add 16KB page size support for Android 15
    buildFeatures {
        buildConfig = true
    }
    buildTypes {
        release {
             minifyEnabled false
             shrinkResources false
             multiDexEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }
//    ndkVersion '25.1.8937393'
}
dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.36' // Ensure SLF4J API is included
    implementation 'org.slf4j:slf4j-simple:1.7.36' // Add a simple implementation

    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-messaging:21.1.0'
//    implementation 'com.pusher:push-notifications-android:1.9.0'
    implementation platform('com.google.firebase:firebase-bom:33.10.0')
//    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging:24.1.0'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
//    implementation 'com.google.android.gms:play-services-ads:23.2.0'
//    implementation project(path: ':google_mobile_ads')
//     implementation 'com.android.support:multidex:2.0.1'
    // For Kotlin users, also import the Kotlin extensions library for Play In-App Update:
    configurations.configureEach {
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
    }
}
flutter {
    source = "../.."
}
